{"ast":null,"code":"var _jsxFileName = \"/Users/brodyscott/js-projects/northone-to-do-app/client/src/components/LabelManager.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Modal, Form, InputGroup } from \"react-bootstrap\";\n\nconst Label = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.label.label), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"#\",\n  onClick: () => {\n    props.deleteLabel(props.label._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"delete\")));\n\nexport default class CreateLabelModal extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeLabel = this.onChangeLabel.bind(this);\n    this.onModalShow = this.onModalShow.bind(this);\n    this.onModalClose = this.onModalClose.bind(this);\n    this.deleteLabel = this.deleteLabel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      label: \"\",\n      savedLabels: [],\n      modalShow: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/labels/\").then(response => {\n      this.setState({\n        savedLabels: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeLabel(e) {\n    this.setState({\n      label: e.target.value\n    });\n  }\n\n  onModalShow(e) {\n    this.setState({\n      modalShow: true\n    });\n  }\n\n  onModalClose(e) {\n    this.setState({\n      modalShow: false\n    });\n  }\n\n  deleteLabel(id) {\n    axios.delete(\"/labels/\" + id).then(res => console.log(res.data));\n    this.setState({\n      savedLabels: this.state.savedLabels.filter(el => el._id !== id)\n    });\n  }\n\n  createLabelsList() {\n    return this.state.savedLabels.map(selectedLabel => {\n      return React.createElement(Label, {\n        label: selectedLabel,\n        deleteLabel: this.deleteLabel,\n        key: selectedLabel._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newLabel = {\n      label: this.state.label\n    };\n    console.log(newLabel);\n    axios.post(\"/labels/add\", newLabel).then(res => console.log(res.data));\n    this.setState({\n      savedLabels: this.state.savedLabels.concat(newLabel)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onModalShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Manage Labels\"), React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: this.onModalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Label Manager\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Examples: \\\"work\\\", \\\"school\\\"\",\n      onChange: this.onChangeLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-secondary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Create\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.createLabelsList())))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.onModalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/brodyscott/js-projects/northone-to-do-app/client/src/components/LabelManager.js"],"names":["React","Component","axios","Button","Modal","Form","InputGroup","Label","props","label","deleteLabel","_id","CreateLabelModal","constructor","onChangeLabel","bind","onModalShow","onModalClose","onSubmit","state","savedLabels","modalShow","componentDidMount","get","then","response","setState","data","catch","error","console","log","e","target","value","id","delete","res","filter","el","createLabelsList","map","selectedLabel","preventDefault","newLabel","post","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Modal, Form, InputGroup } from \"react-bootstrap\";\n\nconst Label = props => (\n  <tr>\n    <td>{props.label.label}</td>\n    <td>\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteLabel(props.label._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class CreateLabelModal extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeLabel = this.onChangeLabel.bind(this);\n    this.onModalShow = this.onModalShow.bind(this);\n    this.onModalClose = this.onModalClose.bind(this);\n    this.deleteLabel = this.deleteLabel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      label: \"\",\n      savedLabels: [],\n      modalShow: false\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/labels/\")\n      .then(response => {\n        this.setState({ savedLabels: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  onChangeLabel(e) {\n    this.setState({\n      label: e.target.value\n    });\n  }\n\n  onModalShow(e) {\n    this.setState({\n      modalShow: true\n    });\n  }\n\n  onModalClose(e) {\n    this.setState({\n      modalShow: false\n    });\n  }\n\n  deleteLabel(id) {\n    axios.delete(\"/labels/\" + id).then(res => console.log(res.data));\n    this.setState({\n      savedLabels: this.state.savedLabels.filter(el => el._id !== id)\n    });\n  }\n\n  createLabelsList() {\n    return this.state.savedLabels.map(selectedLabel => {\n      return (\n        <Label\n          label={selectedLabel}\n          deleteLabel={this.deleteLabel}\n          key={selectedLabel._id}\n        />\n      );\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newLabel = {\n      label: this.state.label\n    };\n\n    console.log(newLabel);\n\n    axios.post(\"/labels/add\", newLabel).then(res => console.log(res.data));\n\n    this.setState({\n      savedLabels: this.state.savedLabels.concat(newLabel)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button variant=\"primary\" onClick={this.onModalShow}>\n          Manage Labels\n        </Button>\n\n        <Modal show={this.state.modalShow} onHide={this.onModalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Label Manager</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <InputGroup className=\"mb-3\">\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder='Examples: \"work\", \"school\"'\n                onChange={this.onChangeLabel}\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={this.onSubmit}>\n                  Create\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n            <div>\n              <table className=\"table\">\n                <tbody>{this.createLabelsList()}</tbody>\n              </table>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.onModalClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}